package fr.ariloxe.arena.kits.release;

import fr.ariloxe.arena.utils.ItemCreator;
import fr.ariloxe.arena.utils.skull.SkullList;
import fr.ariloxe.arena.ArenaAPI;
import fr.ariloxe.arena.kits.KitSchedule;
import fr.ariloxe.arena.kits.KitType;
import fr.ariloxe.arena.player.KPlayer;
import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;

import java.util.Random;
import java.util.Set;

/**
 * @author Ariloxe
 */
public class ZenitsuKit extends KitSchedule {
    public ZenitsuKit() {
        super("Zenitsu", KitType.DEFENSIVE, new ItemStack(SkullList.ZENITSU.getItemStack()),
                "§8» §7Mode : §3Démon-Slayer",
                "§8» §7Pouvoirs:",
                "§f- §c9 coeurs§7 permanent maximum.",
                "§f- §7Vous aurez §bSpeed I§7 permanent.",
                "§f- §7Lorsque vous utilisez votre item, vous obtenez §bSpeed II§7 pendant 9 secondes. (§a27 secondes de cooldown§7)",
                "§f- §7Puis, vous aurez §9Slowness II§7 pendant §b5 secondes§7 à la fin de votre sprint.",
                "");

        super.setSecondsDelay(27);
    }

    private final PotionEffect permanentSpeedEffect = new PotionEffect(PotionEffectType.SPEED, Integer.MAX_VALUE, 0, false, false);
    private final PotionEffect speedEffect = new PotionEffect(PotionEffectType.SPEED, 20 * 9, 1, false, false);
    private final PotionEffect weaknessEffect = new PotionEffect(PotionEffectType.WEAKNESS, 20 * 7, 1, false, false);

    @Override
    public void power(KPlayer kPlayer) {
        Player player = kPlayer.getBukkitPlayer();
        
        // Appliquer la vitesse permanente
        player.addPotionEffect(permanentSpeedEffect);

        // Lancer la tâche pour appliquer l'effet de vitesse 2 temporaire
        Bukkit.getScheduler().runTaskLater(ArenaAPI.getApi(), () -> {
            // Remplacer Speed I par Speed II
            player.addPotionEffect(new PotionEffect(PotionEffectType.SPEED, 20 * 9, 1, false, false));
            player.removePotionEffect(PotionEffectType.SPEED); // Remove Speed I for 9 seconds

            // 30% de chance d'invoquer un éclair
            org.bukkit.block.Block targetBlock = player.getTargetBlock((Set<Material>) null, 50); // Utilisation explicite du type
            if (targetBlock != null && targetBlock.getType() != Material.AIR && new Random().nextInt(100) < 30) {
                player.getWorld().strikeLightning(targetBlock.getLocation());
            }

            // Après 9 secondes, restaurer la vitesse 1 et appliquer la faiblesse
            Bukkit.getScheduler().runTaskLater(ArenaAPI.getApi(), () -> {
                player.addPotionEffect(new PotionEffect(PotionEffectType.SPEED, Integer.MAX_VALUE, 0, false, false)); // Restore Speed I
                player.addPotionEffect(weaknessEffect); // Apply Weakness
            }, 20 * 9);
        }, 20);
    }

    @Override
    public void onEquip(Player player) {
        player.setMaxHealth(18);
        player.getInventory().addItem(new ItemCreator(Material.FEATHER).name("§eÉclair Foudroyant §8§l▪ §7Clic-droit").get());
    }
}
