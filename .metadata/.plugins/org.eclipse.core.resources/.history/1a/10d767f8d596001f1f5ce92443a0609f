package fr.ariloxe.arena.kits.release;

import fr.ariloxe.arena.ArenaAPI;
import fr.ariloxe.arena.kits.KitSchedule;
import fr.ariloxe.arena.kits.KitType;
import fr.ariloxe.arena.player.KPlayer;
import fr.ariloxe.arena.utils.ItemCreator;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.entity.Entity;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import org.bukkit.scheduler.BukkitRunnable;
import org.bukkit.enchantments.Enchantment;

/**
 * @author Ariloxe
 */
public class OursKit extends KitSchedule {

    public OursKit() {
        super("Ours", KitType.TANK, new ItemStack(Material.STICK),
                "§8» §7Mode : §bElityBox §7(§fHommage§7)",
                "§8» §7Pouvoirs:",
                "§f- §7Effectuez une rotation qui infligera des dégats à tous les joueurs",
                "    §7autour de vous. (§a21 secondes de cooldown§7)",
                "§f- §7Obtenez l'effet de Résistance pendant 12 secondes après votre rotation.");
        super.setSecondsDelay(21);
    }

    @Override
    public void power(KPlayer kPlayer) {
        Player player = kPlayer.getBukkitPlayer();
        if (player != null) {
            player.addPotionEffect(potionEffect);
            Location location = player.getLocation().clone().add(0, 2, 0);
            player.playSound(player.getLocation(), Sound.PISTON_RETRACT, 5.0F, 0.0F);
            (new BukkitRunnable() {
                private int time = 6;

                public void run() {
                    location.setYaw(location.getYaw() + 60.0F);
                    player.teleport(location);
                    location.getWorld().getNearbyEntities(player.getLocation(), 15.0D, 15.0D, 15.0D).forEach(entity -> {
                        if (entity instanceof Player && entity != player) {
                            Player players = (Player) entity;
                            players.damage(1);
                            players.setVelocity(players.getLocation().getDirection().multiply(0.5).setY(0.3));
                        }
                    });

                    if (time <= 0)
                        cancel();

                    this.time--;
                }
            }).runTaskTimer(ArenaAPI.getApi(), 0L, 2);
        }
    }

    private final PotionEffect potionEffect = new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, Integer.MAX_VALUE, 0, false, false);

    @Override
    public void onEquip(Player player) {
        player.setMaxHealth(20); // 10 cœurs
        player.setHealth(player.getMaxHealth());

        // Equipement du joueur avec Thorns II
        ItemStack[] armor = player.getInventory().getArmorContents();
        for (int i = 0; i < armor.length; i++) {
            if (armor[i] != null && armor[i].getType() != Material.AIR) {
                armor[i].addEnchantment(Enchantment.THORNS, 2); // Ajouter Thorns II
            }
        }
        player.getInventory().setArmorContents(armor);

        // Ajout du Sacrifice
        ItemStack sacrifice = new ItemCreator(Material.DIAMOND_SWORD).name("§6Sacrifice").get();
        player.getInventory().addItem(sacrifice);

        // Démarrer la régénération naturelle
        startNaturalRegeneration(player);
    }

    private void startNaturalRegeneration(Player player) {
        new BukkitRunnable() {
            @Override
            public void run() {
                if (player.isOnline()) {
                    double health = player.getHealth();
                    if (health < player.getMaxHealth()) {
                        player.setHealth(Math.min(health + 2.0, player.getMaxHealth())); // Régénérer 1 cœur
                    }
                } else {
                    cancel(); // Annuler si le joueur n'est plus en ligne
                }
            }
        }.runTaskTimer(ArenaAPI.getApi(), 0L, 100L); // Exécuter toutes les 5 secondes (100 ticks)
    }

    public void activateSacrifice(KPlayer kPlayer) {
        Player player = kPlayer.getBukkitPlayer();
        if (player != null) {
            player.addPotionEffect(new PotionEffect(PotionEffectType.INCREASE_DAMAGE, 20 * 20, 0, false, false)); // Force I pendant 20 secondes
            new BukkitRunnable() {
                private boolean killed = false;

                @Override
                public void run() {
                    if (!killed) {
                        player.setHealth(Math.max(0, player.getHealth() - 2)); // Perdre 1 cœur si pas de kill
                    }
                    cancel();
                }

                // Appelée lorsque le joueur tue un ennemi
                public void onPlayerKill(Entity killedEntity) {
                    if (killedEntity instanceof Player) {
                        killed = true; // Marquer que le joueur a tué
                    }
                }
            }.runTaskLater(ArenaAPI.getApi(), 20 * 20); // Fin de l'effet de Force I après 20 secondes
        }
    }
}
